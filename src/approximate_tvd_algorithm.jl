# Given two homogeneous Markov processes with (possibly truncated) transition
# probabilities P and Q respectively, which are defined on the same state
# space and start from state p₀, simulate a path of length k from the process
# generated by P, and find the corresponding maximal coupling probability
# between this path and one generated from Q
function simulate_coupling_probability(
    rng::AbstractRNG,
    p₀::Integer,
    k::Integer,
    P::Array{Float64,2},
    Q::Array{Float64,2}
)::Float64

    size(P) ≠ size(Q) && throw(DimensionMismatch("P and Q do not have the same state space"))
    size(P, 1) ≠ size(P, 2) && throw(DimensionMismatch("P and Q are not square matrices"))

    transition_quantiles = rand(rng, k)
    transition_indices = Array{Int}(undef, k + 1)
    transition_indices[1] = p₀

    for n ∈ 1:k
        cumulative_prob = 0.0
        for i ∈ 1:length(P[transition_indices[n], :])
            cumulative_prob += P[transition_indices[n], i] # TODO: change this to a compensated sum
            if transition_quantiles[n] ≤ cumulative_prob
                transition_indices[n+1] = i
                break
            end
            # TODO: add a condition for if P has been truncated to before transition_quantiles[n]
        end
    end

    P_path_prob = 1
    Q_path_prob = 1

    for i ∈ 1:k
        P_path_prob *= P[transition_indices[i], transition_indices[i+1]]
        Q_path_prob *= Q[transition_indices[i], transition_indices[i+1]]
    end

    max((P_path_prob - Q_path_prob) / P_path_prob, 0) # TODO: avoid divide by zero errors
end